name: Build HTML and EXE

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-html:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pigframe
          pip install pyxel
          sudo apt install libsdl2-ttf-2.0-0

      - name: Copy and clean pigframe
        run: |
          cp -r $(python -c "import pigframe; import os; print(os.path.dirname(pigframe.__file__))") src/
          rm -rf src/pigframe/__pycache__
          rm -rf src/pigframe/examples
          rm -rf src/pigframe/tests

      - name: Build pyxapp
        run: |
          pyxel package src src/main.py

      - name: Build HTML version
        run: |
          pyxel app2html ./src.pyxapp

      - name: Upload HTML artifact
        uses: actions/upload-artifact@v3
        with:
          name: html-version
          path: src.html

      - name: Upload pyxapp artifact
        uses: actions/upload-artifact@v3
        with:
          name: pyxapp-file
          path: src.pyxapp

  build-exe:
    needs: build-html
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install pyxel

      - name: Download pyxapp
        uses: actions/download-artifact@v3
        with:
          name: pyxapp-file

      - name: Build Windows EXE
        run: |
          pyxel app2exe ./src.pyxapp

      - name: Create ZIP file
        run: |
          mkdir windows-version
          move src.exe windows-version\
          powershell Compress-Archive -Path windows-version -DestinationPath windows-version.zip

      - name: Upload ZIP artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-version
          path: windows-version.zip

  create-release:
    needs: [build-html, build-exe]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            html-version/src.html
            windows-version/windows-version.zip
          tag_name: v${{ github.run_number }}
          name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}